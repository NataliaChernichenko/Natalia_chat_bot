from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, CallbackQueryHandler, ContextTypes

# –í—Å—Ç–∞–≤—å —Å—é–¥–∞ —Å–≤–æ–π —Ç–æ–∫–µ–Ω
TOKEN = "7527317105:AAEdPTJ8onKql05ofDsFrslUCgMxKiFwxz8"

# ---------------------------
# –ú–µ–Ω—é (—Ç–≤–æ—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞)
# ---------------------------
menu = {
    "–î–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤": {
        "–ë–ª–∞–Ω–∫–∏": {
            "–í—ã—Ö–æ–¥–Ω–æ–π –ø–æ –¥–æ–Ω–æ—Ä—Å–∫–æ–π —Å–ø—Ä–∞–≤–∫–µ": "https://disk.yandex.ru/i/JO4iH1xId2yqVg",
            "–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–π –æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã–π –æ—Ç–ø—É—Å–∫": "https://disk.yandex.ru/i/ugcXOPEJJ9Et1g",
            "–û—Ç–ø—É—Å–∫ –±–µ–∑ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –∑–∞—Ä–ø–ª–∞—Ç—ã": "https://disk.yandex.ru/i/MueBOn0XlWDl-g",
            "–ï–∂–µ–≥–æ–¥–Ω—ã–π –æ–ø–ª–∞—á–∏–≤–∞–µ–º—ã–π –æ—Ç–ø—É—Å–∫": "https://disk.yandex.ru/i/BgCWFj-3bN5YWg",
            "–ü–µ—Ä–µ–Ω–æ—Å –æ—Ç–ø—É—Å–∫–∞ –ø–æ –±–æ–ª—å–Ω–∏—á–Ω–æ–º—É": "https://disk.yandex.ru/i/SYyBFnD4NffjoA",
            "–ü–µ—Ä–µ–Ω–æ—Å –æ—Ç–ø—É—Å–∫–∞": "https://disk.yandex.ru/i/vrPf_xAW4xWVwA"
        },
        "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ": {
            "–ö–æ—Ä–ø—É—Å –°—á–∞—Å—Ç—å–µ": "https://disk.yandex.ru/i/QxZmJNWbyFYW8g",
            "–ö–æ—Ä–ø—É—Å –†–∞–¥–æ—Å—Ç—å": "https://disk.yandex.ru/i/YPrckPUrzO10TQ",
            "–ö–æ—Ä–ø—É—Å –ö—Ä–∞—Å–æ—Ç–∞": "https://disk.yandex.ru/i/TnRJHQQAYh5MlA",
            "–ö–æ—Ä–ø—É—Å –í–µ—Å–µ–ª—å–µ": "https://disk.yandex.ru/i/c24mle0iO6L8lQ"
        },
        "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è –ø–æ—á—Ç–∞": "https://disk.yandex.ru/i/HouAcnwSY7j71g",
        "–î–æ–∫—É–º–µ–Ω—Ç—ã –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ 1-–π –∫–ª–∞—Å—Å": (
            "–°–ø–∏—Å–æ–∫ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –¥–ª—è –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –≤ 1-–π –∫–ª–∞—Å—Å:\n"
            "1. –ö–æ–ø–∏—è –ø–∞—Å–ø–æ—Ä—Ç–∞ –∑–∞–∫–æ–Ω–Ω–æ–≥–æ –ø—Ä–µ–¥—Å—Ç–∞–≤–∏—Ç–µ–ª—è (1-—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ + –ø—Ä–æ–ø–∏—Å–∫–∞)\n"
            "2. –ö–æ–ø–∏—è —Å–≤–∏–¥–µ—Ç–µ–ª—å—Å—Ç–≤–∞ –æ —Ä–æ–∂–¥–µ–Ω–∏–∏ —Ä–µ–±–µ–Ω–∫–∞\n"
            "3. –ö–æ–ø–∏—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ —Ä–µ–±–µ–Ω–∫–∞ (—Ñ–æ—Ä–º–∞ 8 –∏–ª–∏ 3)\n"
            "4. –ö–æ–ø–∏—è –°–ù–ò–õ–°–∞ —Ä–µ–±–µ–Ω–∫–∞\n"
            "5. –ö–æ–ø–∏—è –º–µ–¥ –ø–æ–ª–∏—Å–∞ —Ä–µ–±–µ–Ω–∫–∞\n"
            "6. –§–æ—Ç–æ —Ä–µ–±–µ–Ω–∫–∞ (3—Ö4 –∏–ª–∏ 3,5—Ö4,5)\n"
            "7. –í—Å–µ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã–µ –±–ª–∞–Ω–∫–∏ (–≤ —Ñ–∞–π–ª–µ)"
        )
    },
    "–î–ª—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π": {
        "–ë–ª–∞–Ω–∫–∏": {
            "–ü–µ—Ä–µ–≤–æ–¥ —Ä–µ–±–µ–Ω–∫–∞ –∏–∑ –≥—Ä—É–ø–ø—ã": "https://disk.yandex.ru/i/LKpx2leZnBxa6w",
            "–û—Ç–ø—É—Å—Ç–∏—Ç—å —Ä–µ–±–µ–Ω–∫–∞ –∏–∑ —Å–∞–¥–∞": "https://disk.yandex.ru/i/QGjjxPQYhWpDBA",
            "–û—Ç—á–∏—Å–ª–µ–Ω–∏–µ —Ä–µ–±–µ–Ω–∫–∞ –∏–∑ —Å–∞–¥–∞": "https://disk.yandex.ru/i/sKqwcTCCykiliQ",
            "–õ–µ—Ç–æ": "https://disk.yandex.ru/i/hmEScSkZcxKg8w"
        },
        "–î–æ–≥–æ–≤–æ—Ä –¥–æ–ø–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏—è": "http://—ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—ã–π–¥–æ–≥–æ–≤–æ—Ä.–º–æ—Å–∫–≤–∞/%D0%A8%D0%BA%D0%BE%D0%BB%D0%B0_%D0%B2_%D0%9D%D0%B5%D0%BA%D1%80%D0%B0%D1%81%D0%BE%D0%B2%D0%BA%D0%B5"
    },
    "–î–æ—à–∫–æ–ª—å–Ω–æ–µ –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ": {
        "–ö–æ—Ä–ø—É—Å–∞": {
            "–°—á–∞—Å—Ç—å–µ": {"–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏": "https://disk.yandex.ru/i/Ztqga4ANPDNCvg", "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ": "https://disk.yandex.ru/i/QxZmJNWbyFYW8g"},
            "–†–∞–¥–æ—Å—Ç—å": {"–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏": "https://disk.yandex.ru/i/iqAqs7nBE49enA", "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ": "https://disk.yandex.ru/i/YPrckPUrzO10TQ"},
            "–ö—Ä–∞—Å–æ—Ç–∞": {"–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏": "https://disk.yandex.ru/i/29ECP64xN3Bdkg", "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ": "https://disk.yandex.ru/i/TnRJHQQAYh5MlA"},
            "–í–µ—Å–µ–ª—å–µ": {"–°–æ—Ç—Ä—É–¥–Ω–∏–∫–∏": "https://disk.yandex.ru/i/24prhMJNQjLaRw", "–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ": "https://disk.yandex.ru/i/c24mle0iO6L8lQ"}
        },
        "–ú—É–∑—ã–∫–∞–ª—å–Ω—ã–µ —Ä—É–∫–æ–≤–æ–¥–∏—Ç–µ–ª–∏ –∏ –∏–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä—ã —Ñ–∏–∑–∏—á–µ—Å–∫–æ–π –∫—É–ª—å—Ç—É—Ä—ã": "https://disk.yandex.ru/i/fpPczyphV7XXTw",
        "–†–∞–∑–º–µ—Ä —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –ø–ª–∞—Ç—ã": {
            "–ü–æ–ª–Ω—ã–π –¥–µ–Ω—å 4290 —Ä—É–±–ª–µ–π. –ì–ö–ü 2360 —Ä—É–±–ª–µ–π.": None,
            "–õ—å–≥–æ—Ç–Ω—ã–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏": (
                "- –¥–µ—Ç–∏ –∏–∑ –º–Ω–æ–≥–æ–¥–µ—Ç–Ω—ã—Ö —Å–µ–º–µ–π\n"
                "- –¥–µ—Ç–∏-–∏–Ω–≤–∞–ª–∏–¥—ã\n"
                "- –¥–µ—Ç–∏-—Å–∏—Ä–æ—Ç—ã\n"
                "- –¥–µ—Ç–∏ —Å —Ç—É–±–µ—Ä–∫—É–ª–µ–∑–Ω–æ–π –∏–Ω—Ç–æ–∫—Å–∏–∫–∞—Ü–∏–µ–π\n"
                "- –¥–µ—Ç–∏, –æ—Å—Ç–∞–≤—à–∏–µ—Å—è –±–µ–∑ –ø–æ–ø–µ—á–µ–Ω–∏—è —Ä–æ–¥–∏—Ç–µ–ª–µ–π\n"
                "- –¥–µ—Ç–∏, —É –∫–æ—Ç–æ—Ä—ã—Ö –æ–±–∞ —Ä–æ–¥–∏—Ç–µ–ª—è —è–≤–ª—è—é—Ç—Å—è –∏–Ω–≤–∞–ª–∏–¥–∞–º–∏ 1 –∏ 2 –≥—Ä—É–ø–ø—ã\n"
                "- –¥–µ—Ç–∏, –Ω–∞—Ö–æ–¥—è—â–∏–µ—Å—è –ø–æ–¥ –æ–ø–µ–∫–æ–π (–ø–æ–ø–µ—á–∏—Ç–µ–ª—å—Å—Ç–≤–æ–º), –¥–µ—Ç–∏ –≤ –ø—Ä–∏–µ–º–Ω—ã—Ö —Å–µ–º—å—è—Ö\n"
                "- –¥–µ—Ç–∏ –≤–æ–µ–Ω–Ω–æ—Å–ª—É–∂–∞—â–∏—Ö –∏ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ –ú–í–î, –ø–æ–≥–∏–±—à–∏—Ö –ø—Ä–∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–∏ —Å–ª—É–∂–µ–±–Ω—ã—Ö –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–µ–π"
            )
        }
    },
    "–ö–æ–Ω—Ç–∞–∫—Ç–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è": {
        "–°–µ–∫—Ä–µ—Ç–∞—Ä–∏–∞—Ç": "—É–ª. –õ—å–≤–∞ –Ø—à–∏–Ω–∞, –¥.3 +7 (499) 211-26-10",
        "–û—Ç–¥–µ–ª –∫–∞–¥—Ä–æ–≤": "—É–ª. –í–µ—Ä—Ç–æ–ª—ë—Ç—á–∏–∫–æ–≤, –¥.2–í +7 (991) 283-06-20",
        "–û—Ç–¥–µ–ª –æ—Ö—Ä–∞–Ω—ã —Ç—Ä—É–¥–∞": "—É–ª. –õ—å–≤–∞ –Ø—à–∏–Ω–∞, –¥.3"
    }
}

# ---------------------------
# –°–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –∫–∞—Ä—Ç–∞ callback'–æ–≤
# ---------------------------
user_paths = {}          # chat_id -> list –ø—É—Ç–∏ (–∫–ª—é—á–∏ –º–µ–Ω—é)
callback_mapping = {}    # cb_id -> key_text (—á—Ç–æ–±—ã callback_data –±—ã–ª–∏ –∫–æ—Ä–æ—Ç–∫–∏–º–∏)

# ---------------------------
# –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã (cb –∫–æ—Ä–æ—Ç–∫–∏–µ id)
# ---------------------------
def generate_keyboard(data: dict, include_back: bool = True):
    keyboard = []
    if not isinstance(data, dict):
        return InlineKeyboardMarkup([])
    for key in data.keys():
        cb = f"cb{len(callback_mapping)}"
        callback_mapping[cb] = key
        keyboard.append([InlineKeyboardButton(key, callback_data=cb)])
    if include_back:
        keyboard.append([InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back")])
    return InlineKeyboardMarkup(keyboard)

# ---------------------------
# –•–µ–ª–ø–µ—Ä: –ø–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–µ–µ –º–µ–Ω—é –ø–æ –ø—É—Ç–∏
# ---------------------------
def get_menu_by_path(path: list):
    cur = menu
    for p in path:
        cur = cur.get(p, {})
    return cur

# ---------------------------
# /start
# ---------------------------
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.effective_chat.id
    user_paths[chat_id] = []
    keyboard = generate_keyboard(menu, include_back=False)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –≠—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ —à–∫–æ–ª—ã –ù–µ–∫—Ä–∞—Å–æ–≤–∫–∞ üòä\n\n–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        reply_markup=keyboard
    )

# ---------------------------
# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞–∂–∞—Ç–∏–π
# ---------------------------
async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE):
    query = update.callback_query
    await query.answer()
    chat_id = update.effective_chat.id
    if chat_id not in user_paths:
        user_paths[chat_id] = []
    path = user_paths[chat_id]

    # –¢–µ–∫—É—â–µ–µ –º–µ–Ω—é –ø–æ –ø—É—Ç–∏
    current_menu = get_menu_by_path(path)

    # –ù–∞–∂–∞–ª–∏ "–ù–∞–∑–∞–¥"
    if query.data == "back":
        if path:
            path.pop()
        user_paths[chat_id] = path
        current_menu = get_menu_by_path(path)
        keyboard = generate_keyboard(current_menu, include_back=bool(path))
        await query.edit_message_text("–í—ã–±–µ—Ä–∏—Ç–µ –ø—É–Ω–∫—Ç:", reply_markup=keyboard)
        return

    # –ü–µ—Ä–µ–≤–æ–¥–∏–º –∫–æ—Ä–æ—Ç–∫–∏–π cb -> —Ä–µ–∞–ª—å–Ω—ã–π –∫–ª—é—á
    key = callback_mapping.get(query.data)
    if key is None:
        # —É—Å—Ç–∞—Ä–µ–≤—à–∏–π/–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π callback ‚Äî –±–µ–∑–æ–ø–∞—Å–Ω–æ –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º
        await query.answer("–ö–Ω–æ–ø–∫–∞ —É—Å—Ç–∞—Ä–µ–ª–∞, –Ω–∞–∂–º–∏—Ç–µ —Å–Ω–æ–≤–∞ /start", show_alert=False)
        return

    # –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ —Ç–µ–∫—É—â–µ–º –º–µ–Ω—é
    selected = None
    if isinstance(current_menu, dict):
        selected = current_menu.get(key)

    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω –ø–æ–¥—Ä–∞–∑–¥–µ–ª (dict) ‚Äî –≤—Ö–æ–¥–∏–º –≤–Ω—É—Ç—Ä—å
    if isinstance(selected, dict):
        path.append(key)
        user_paths[chat_id] = path
        keyboard = generate_keyboard(selected, include_back=True)
        await query.edit_message_text(f"–í—ã–±–µ—Ä–∏—Ç–µ {key}:", reply_markup=keyboard)
        return

    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω URL (—Å—Ç—Ä–æ–∫–∞, –Ω–∞—á–∏–Ω–∞—é—â–∞—è—Å—è —Å http) ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –∫–Ω–æ–ø–∫–æ–π "–û—Ç–∫—Ä—ã—Ç—å" –∏ "–ù–∞–∑–∞–¥"
    if isinstance(selected, str) and selected.startswith("http"):
        markup = InlineKeyboardMarkup([
            [InlineKeyboardButton("–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª", url=selected)],
            [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back")]
        ])
        await query.edit_message_text(f"{key}\n\n–ù–∞–∂–º–∏—Ç–µ ¬´–û—Ç–∫—Ä—ã—Ç—å —Ñ–∞–π–ª¬ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏:", reply_markup=markup)
        return

    # –ï—Å–ª–∏ –≤—ã–±—Ä–∞–Ω —Ç–µ–∫—Å—Ç (—Å—Ç—Ä–æ–∫–∞) ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–µ–∫—Å—Ç –∏ –∫–Ω–æ–ø–∫—É "–ù–∞–∑–∞–¥"
    if isinstance(selected, str):
        markup = InlineKeyboardMarkup([
            [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back")]
        ])
        await query.edit_message_text(selected, reply_markup=markup)
        return

    # –ï—Å–ª–∏ –≤ –º–µ–Ω—é –∑–Ω–∞—á–µ–Ω–∏–µ None (–ø–ª–∞—à–∫–∞ –±–µ–∑ –¥–µ–π—Å—Ç–≤–∏—è) ‚Äî –ø–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–∞–º –∫–ª—é—á –∫–∞–∫ —Ç–µ–∫—Å—Ç + –ù–∞–∑–∞–¥
    if selected is None:
        markup = InlineKeyboardMarkup([
            [InlineKeyboardButton("‚¨Ö –ù–∞–∑–∞–¥", callback_data="back")]
        ])
        await query.edit_message_text(key, reply_markup=markup)
        return

    # –ù–∞ –≤—Å—è–∫–∏–π —Å–ª—É—á–∞–π
    await query.answer("–ù–µ—á–µ–≥–æ –ø–æ–∫–∞–∑–∞—Ç—å", show_alert=False)

# ---------------------------
# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
# ---------------------------
def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(CallbackQueryHandler(button_handler))
    app.run_polling()

if __name__ == "__main__":
    main()
